
# Chapter Section Item
FORMAT_OUTLINE_PROMPT_PART = f"""
## 核心要求
- 以yaml格式输出，务必用```yaml和```包裹整个yaml内容，便于后续自动分割。
- 每一项为一个主要部分，每部分需包含：
  - part_num: 序号（例如 1，1.1,1.1.1）
  - part_title: 标题（格式："序号. 标题名称"）
  - part_title_type: 层级类型（章/节）
  - part_desc: 本部分内容简介（本部分聚焦研究对象的核心属性与研究价值，回答'研究对象的本质特征是什么'及'为何该研究具有现实意义'，为全文奠定分析基础）（60-100字）
  - part_content_type: 说明该部分内容的性质(例如：理论铺垫、数据论证、基础定义、价值论证、现状描述、格局分析等)
  - part_key_output: 本部分需产出的关键结论或成果（例如：明确研究对象的核心定义、研究范围及研究必要性）（60-100字）
  - part_data_source: 支撑该部分内容的典型数据/资料来源（例如：行业词典、政策文件、经典文献等）
  - part_importance: 本部分内容的重要性（核心/次要/辅助）
  - part_length_ratio: 建议篇幅占比，控制全文结构平衡（例如："10%-15%"）
- yaml的值需要用单引号包裹
- 只输出yaml格式大纲，不输出正文内容
- 大纲章节必需覆盖公司基本面、行业分析、公司深度分析、财务分析、行业对比、估值与预测、治理结构、投资建议、风险提示等，章节顺序可以修改。

## 结构设计原则
- 核心逻辑：宏观环境→行业分析→公司基本面→深度分析→财务分析→估值→投资建议→风险提示
- 层级深度：根据内容复杂度灵活确定，重要章节可细化到三级
- 篇幅分配：核心分析章节（财务分析、公司分析）占比较高，基础信息和风险提示适中
- 逻辑连贯：确保章节间有清晰的递进关系

## 质量标准
1. **专业性**：使用准确的金融术语和分析方法
2. **完整性**：覆盖投资决策所需的全部维度
3. **实用性**：提供具体可操作的投资建议
4. **前瞻性**：包含对未来趋势的预判
5. **可读性**：结构清晰，逻辑流畅
"""
# ## 需要覆盖的核心内容
# 1. **公司基本面分析**（公司概况、主营业务、股权结构、发展历程）
# 2. **行业环境分析**（宏观环境、行业格局、政策影响）
# 3. **公司深度分析**（商业模式、竞争优势、技术壁垒）
# 4. **财务分析**（盈利能力、偿债能力、现金流、成长性）
# 5. **同业对比分析**（竞争格局、估值对比）
# 6. **公司治理结构**（管理层、股东结构、治理机制）
# 7. **估值与预测**（估值模型、目标价、业绩预测）
# 8. **投资建议**（评级、操作建议、关键观测指标）
# 9. **风险提示**（技术风险、市场风险、政策风险、财务风险）
# 10. **数据来源与免责声明**
FORMAT_OUTLINE_PROMPT_PART_AI = f"""

## 关键规则（必须严格遵守）

**重要提醒：请严格按照以下规则生成大纲**

### 输出格式要求
- 以yaml格式输出，务必用```yaml和```包裹整个yaml内容
- yaml的值需要用单引号包起来，例如 part_title: '标题'

### 字段定义（每一项必须包含以下字段）
- has_sub_parts: 是否有子编号（'有'/'无'）
- part_num: 序号（例如 '1', '1.1', '1.1.1'）
- part_title: 标题（格式："序号. 标题名称"）
- part_title_type: 层级类型（'章'/'节'/'目'）
- part_desc: 本部分内容简介（60-100字）
- part_content_type: 内容性质（例如：理论铺垫、数据论证、基础定义等）
- part_key_output: 关键结论或成果（60-100字）
- part_data_source: 数据/资料来源
- part_importance: 重要性（'核心'/'次要'/'辅助'）
- part_length_ratio: 篇幅占比（例如：'10%-15%'）

### has_sub_parts字段判断规则（重要！）
**判断方法：检查当前编号后是否存在子编号**
- 如果编号"1"下存在"1.1"、"1.2"等，则has_sub_parts为'有'
- 如果编号"1.1"下不存在"1.1.1"、"1.1.2"等，则has_sub_parts为'无'
- 示例：
  - "1" → 存在"1.1"、"1.2" → has_sub_parts: '有'
  - "1.1" → 不存在"1.1.1" → has_sub_parts: '无'
  - "2" → 存在"2.1" → has_sub_parts: '有'
  - "2.1" → 不存在"2.1.1" → has_sub_parts: '无'
  
### 结构要求
- 避免单一子节点的情况（如2下只有2.1）
- 层级控制：章(1) → 节(1.1) → 目(1.1.1)，最多三级
- 只有在内容逻辑上确实需要细分时才设置子节点
- 避免为了设置子节点而强行拆分内容
- 保持大纲的自然逻辑性和可读性

## 特别提醒：
- 宁可不设子节点，也不要设置错误的 has_sub_parts
- 内容完整性比结构复杂性更重要
- 每个节点的内容应该有实际价值

## 必须覆盖的核心要素：
公司基本面、深度分析、财务分析、行业对比、估值预测、投资建议、风险提示、数据来源等
"""




# 如果当前章节下面还有子章节（如1下面有1.1, 1.2），则设为true
# - yaml格式中字符串中嵌套的双引号需要转义，例如：part_desc: '这是一个"创新性构建"的案例" 要写成 part_desc:  "这是一个\"创新性构建\"的案例"
# - part_num: 序号（从1开始）
# - part_common_pitfalls: 常见误区提醒（例如：避免定义模糊导致研究范围失控；防止仅强调现实意义而忽略理论价值）

# - part_is_last: 是否为最后一级（True / False）